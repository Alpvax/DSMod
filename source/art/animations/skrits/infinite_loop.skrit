// Animation Skrit: Infinite_Loop
//
// History:
//		VERSION 1.0:	Initial implementation
//		VERSION 2.0:	Converted to WorldMessages 
//						Added SFX event tests
//						Uses owner, rather than ASPECT arg
//		VERSION 2.1		Marked as not persistent
//

property int MAJORVERSION$ = 2;
property int MINORVERSION$ = 1;
property bool _PERSIST$ = false;

owner = Aspect;

/////////////////////////////////////////////////////////////////////////////
// Utilities

/////////////////////////////////////////////////////////////////////////////
// States

//----------------------------

startup state LoopForever$ 
{
	event OnStartChore$ ( int subanim$, int /*flags$*/ )
	{
		int bg$ = owner.blender.OpenBlendGroup();
		owner.blender.AddAnimToBlendGroup(subanim$,1);
		owner.blender.CloseBlendGroup();
		owner.blender.SetBlendGroupWeight(bg$,1);
	}

	event OnUpdate$( float delta_t$ )
	{
 	 	int events$ = owner.UpdateBlender(delta_t$);

		if (AnimEventBitTest(events$,ANIMEVENT_SFX_1)) {
			PostWorldMessage( WE_ANIM_SFX, owner.goid, owner.goid,  1, 0 );
		}
		if (AnimEventBitTest(events$,ANIMEVENT_SFX_2)) {
			PostWorldMessage( WE_ANIM_SFX, owner.goid, owner.goid,  2, 0 );
		}
		if (AnimEventBitTest(events$,ANIMEVENT_SFX_3)) {
			PostWorldMessage( WE_ANIM_SFX, owner.goid, owner.goid,  3, 0 );
		}
		if (AnimEventBitTest(events$,ANIMEVENT_SFX_4)) {
			PostWorldMessage( WE_ANIM_SFX, owner.goid, owner.goid,  4, 0 );
		}
 		if (AnimEventBitTest(events$,ANIMEVENT_FIRE_WEAPON)) {
			PostWorldMessage( WE_ANIM_WEAPON_FIRE, owner.goid, owner.goid, owner.CurrentReqBlock, 0 );
		}
		if (AnimEventBitTest(events$,ANIMEVENT_HIDE_MESH)) {
			owner.SetHideMeshFlag(true);
		}
		if (AnimEventBitTest(events$,ANIMEVENT_SHOW_MESH)) {
			owner.SetHideMeshFlag(false);
		}
		if (AnimEventBitTest(events$,ANIMEVENT_FINISH)) {
			PostWorldMessage( WE_ANIM_LOOPED, owner.goid, owner.goid, owner.CurrentReqBlock, 0 );
		}
	}

}
