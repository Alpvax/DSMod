// Animation Skrit: transition_to_Loop
//
//		VERSION 2.0:	Converted to WorldMessages 
//						Added SFX event tests
//						Uses owner, rather than ASPECT arg
//
// Notes: This skrit assumes we have the following
// animations to work with:
//
//		00 = transition-to-loop-animation
//		01 = looping-animation
//
//												

property int MAJORVERSION$ = 2;
property int MINORVERSION$ = 0;

owner = Aspect;

/////////////////////////////////////////////////////////////////////////////
// Utilities

/////////////////////////////////////////////////////////////////////////////
// States

//----------------------------
startup state Transition$
{
	event OnStartChore$ ( int subanim$, int /*flags$*/ )
	{
		owner.blender.ResetTimeWarp();

		int bg$ = owner.blender.OpenBlendGroup();
		owner.blender.AddAnimToBlendGroup(0,1);
		owner.blender.CloseBlendGroup();
		owner.blender.SetBlendGroupWeight(bg$,1);

		owner.UpdateBlender(0);
	}

	event OnUpdate$( float delta_t$ )
	{

 	 	int events$ = owner.UpdateBlender(delta_t$);

		if (AnimEventBitTest(events$,ANIMEVENT_FINISH)) {

			owner.blender.ResetTimeWarp();

			int bg$ = owner.blender.OpenBlendGroup();
		   	owner.blender.AddAnimToBlendGroup(1,1);
			owner.blender.CloseBlendGroup();
			owner.blender.SetBlendGroupWeight(bg$,1);

			owner.UpdateBlender(0);

			SetState LoopForever$;
		}
	}
}

state LoopForever$
{
	event OnUpdate$( float delta_t$ )
	{
 	 	owner.UpdateBlender(delta_t$);

	}

}
