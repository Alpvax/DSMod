/*
  ============================================================================
  ----------------------------------------------------------------------------

	File		: 	job_talk_gregor.skrit

	Author(s)	: 	Eric Tams, Chad Queen, Bartosz Kijanka

	Purpose		: 	Custom talk job for gregor for the water dungeon quest.

	(C)opyright 2001 Gas Powered Games, Inc.

  ----------------------------------------------------------------------------
  ============================================================================
*/

Go		m_Go$;
GoMind	m_Mind$;
GoBody  m_Body$;
Job		m_Job$;
Goid	m_Target$;

#include "k_job_c_mcp_fidget_utils"
#include "k_job_c_talk_utils"

startup state STARTUP$
{
}

////////////////////////////////////////////////////////////////////////////////
//	init
event OnJobInitPointers$( Job job$ )
{
	m_Job$		= job$;
	m_Go$		= job$.Go;
	m_Mind$		= job$.Go.Mind;
	m_Body$		= job$.Go.Body;
}

event OnJobInit$( Job job$ )
{
	OnJobInitPointers$( job$ );

	m_Target$	= job$.GoalObject;

	SetState Talk$;
}

////////////////////////////////////////////////////////////////////////////////
//	blab blab away... pretend you're Lee on coffee
state Talk$
{
	transition
	{
		-> Exiting$:	OnWorldMessage( WE_REQ_TALK_END ) =
		{
			if( m_Go$.Mind.ActorAutoFidgets )
			{
				StartFidgetIfRequired$();
			}
		}
	}
	
	event OnEnterState$
	{
		if (( ( Victory.IsQuestCompleted( "quest_water_dungeon" ) ) || ( GameAuditor.GetDb.GetBool( "wd_r1_dead_guys_found" )) ) &&
			( !GameAuditor.GetDb.GetBool( "tr_r2_gold_reward_given" )) )
		{
			SiegePos SpawnPos$;

			GoCloneReq cloneReq$ = MakeGoCloneReq( "gold" );

			SpawnPos$ = m_Target$.go.placement.position;
			cloneReq$.StartingPos	= SpawnPos$;

			if( m_Target$.Go.Hasmind )
			{
				if( AIQuery.FindSpotRelativeToSource( m_Target$.Go, 1, 1.5, 0, m_Target$.Go.Mind.TempPos1 ) )
		   		{
		   			cloneReq$.StartingPos = m_Target$.Go.Mind.TempPos1;
		   		}
		   	}
			cloneReq$.SnapToTerrain = true;

	        Goid gold$ = GoDb.SCloneGo( cloneReq$ );
			if ( ( Victory.IsQuestActive( "quest_water_dungeon" )) &&  ( GameAuditor.GetDb.GetBool( "wd_r1_dead_guys_found" )) )
			{
	        	gold$.Go.Aspect.SetGoldValue(35000);
				gold$.go.PlayVoiceSound( "sell", 5, 10, false );
			}
			else if ( GameAuditor.GetDb.GetBool( "wd_r1_dead_guys_found" ))
			{
	        	gold$.Go.Aspect.SetGoldValue(25000); // not as much of a reward if they didn't get the quest before they completed it
				gold$.go.PlayVoiceSound( "sell", 5, 10, false );
			}
	        GameAuditor.GetDb.SetBool( "tr_r2_gold_reward_given", true );
		}
		if (
		( ( Victory.IsQuestActive( "quest_water_dungeon" ) ) && ( GameAuditor.GetDb.GetBool( "wd_r1_dead_guys_found" ) ) )
		 || ( Victory.IsQuestCompleted( "quest_water_dungeon" ))
		)
		{
			m_Go$.GetConversation.RSSelectConversation( "conversation_gregor_quest_complete" );
		} 
		else if ( GameAuditor.GetDb.GetBool( "wd_r1_dead_guys_found" ))
		{
			m_Go$.GetConversation.RSSelectConversation( "conversation_gregor_quest_done_early" );
		}
		else
		{
			m_Go$.GetConversation.RSSelectConversation( "conversation_gregor" );
		}
		m_Go$.GetConversation.RSActivateDialogue();
	}
}


////////////////////////////////////////////////////////////////////////////////
//	finish blabbing
state Exiting$
{
	event OnEnterState$
	{
		m_Job$.MarkForDeletion();
	}
}
