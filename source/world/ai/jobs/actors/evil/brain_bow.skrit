/*
  ============================================================================
  ----------------------------------------------------------------------------

	File		: 	brain_bow.skrit

	Author(s)	: 	Eric Tams

	Purpose		:	To make droog which will bow for the player

	(C)opyright 2001 Gas Powered Games, Inc.


	Exptected Behavior:
	-------------------

	Should just make a droog bow when he sees a player.

*/


Go		m_Go$;
GoMind	m_Mind$;
Job		m_Job$;


startup state STARTUP$
{
}

////////////////////////////////////////
//	TryAnim

bool TryAnim$( int FourCC$ )
{
	MCPManager.Flush(m_Go$.Goid);
					
	int Anim$ = m_Go$.Aspect.AspectHandle.Blender.GetSubAnimIndex(CHORE_MISC,FourCC$);
		
	if (Anim$ >= 0)
	{
		eReqRetCode ret$ = MCPManager.MakeRequest( m_Go$.Goid, PL_PLAYANIM, CHORE_MISC, Anim$, 0 );
		return true;	
	}
	return false;
}

////////////////////////////////////////////////////////////////////////////////
//	init

event OnJobInitPointers$( Job job$ )
{
	m_Job$		= job$;
	m_Go$		= job$.Go;
	m_Mind$		= job$.Go.Mind;
}


event OnJobInit$( Job job$ )
{
	OnJobInitPointers$( job$ );

	SetState Waiting$;
	return;
}

////////////////////////////////////////////////////////////////////////////////
//	state Waiting$

state Waiting$
{
	trigger OnWorldMessage$( WE_FRIEND_ENTERED_OUTER_COMFORT_ZONE )
	{
		Goid Spotted$ = MakeGoid( m_Mind$.HandlingMessage.Data1 );
		
		if( Spotted$.Go.Player.Controller == PC_HUMAN )
		{
			m_Go$.PlayVoiceSound( "env_droog_bow", 6, 30, false );
			m_Mind$.SetActorAutoFidgets( false );
			m_Go$.Mind.SDoJob( MakeJobReq( JAT_STOP, JQ_ACTION, QP_CLEAR, AO_COMMAND ));
			MCPManager.MakeRequest( m_Go$.Goid, PL_FACE, Spotted$);
			SetState Bow$;
		}
	}
}

state Bow$
{
	transition
	{
		-> Prone$:		OnWorldMessage( WE_ANIM_DONE ) =
		{
			MCPManager.MakeRequest( m_Go$.Goid, PL_FACE );
		}
	}
	
	event OnEnterState$
	{	
		if ( !TryAnim$('bow1') )
		{
			SetState StartFidget$;
		}
	}
}

state Prone$
{
	transition
	{
		-> Prone$:		OnWorldMessage( WE_ANIM_DONE );
	}
	event OnEnterState$
	{
		if ( !TryAnim$('pron') )
		{
			SetState StartFidget$;
		}
	}
}

////////////////////////////////////////////////////////////////////////////////
//	state StartFidget$

state StartFidget$
{
	event OnEnterState$
	{
		m_Mind$.SetActorAutoFidgets( true );
	}
}